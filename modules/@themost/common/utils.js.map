{"version":3,"sources":["utils.es6.js"],"names":[],"mappings":";;;;;;;qjBAAA;;;;;;;;;;AAQA;;IAAO,O;;AACP;;IAAO,C;;AACP;;IAAQ,O,YAAA,O;;AACR;;IAAQ,a,WAAA,a;;;;;;AAER,IAAM,aAAa,gEAAnB;AACA,IAAM,YAAY,kBAAlB;AACA,IAAM,iBAAiB,kCAAvB;;AAEA,IAAM,gBAAgB,gHAAtB;AACA,IAAM,mBAAmB,UAAzB;AACA,IAAM,oBAAoB,WAA1B;AACA,IAAM,YAAY,UAAlB;AACA,IAAM,iBAAiB,eAAvB;AACA,IAAM,eAAe,aAArB;AACA,IAAM,aAAa,qBAAnB;AACA,IAAM,YAAY,+EAAlB;;AAEA,SAAS,MAAT,GAAkB;AACd,WAAO,OAAO,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,OAAO,OAAP,KAAmB,WAAnB,GAAiC,OAAjC,GAA2C,CAA1E,MAAiF,kBAAxF;AACH;;AAED;;;;IAGa,I,WAAA,I;;;;;;;;AACT;;;;;8BAKa,I,EAAM,G,EAAK;AACpB,iBAAK,OAAL,CAAa,IAAb,EAAmB,YAAnB;AACA,gBAAI,OAAO,IAAP,KAAgB,UAApB,EAAgC;AAC5B,qBAAK,IAAL;AACH;AACD,gBAAI,YAAJ;AACA,gBAAI,OAAO,IAAP,KAAgB,UAApB,EAAgC;AAC5B,sBAAM,CAAE,KAAK,IAAL,EAAR;AACH,aAFD,MAEO;AACH,sBAAO,CAAC,IAAR;AACH;AACD,gBAAI,GAAJ,EAAS;AACL,oBAAI,eAAe,KAAnB,EAA0B;AACtB,0BAAM,GAAN;AACH;AACD,sBAAM,IAAI,aAAJ,CAAkB,GAAlB,EAAuB,QAAvB,CAAN;AACH;AACJ;;AAED;;;;;;;;gCAKe,G,EAAK,I,EAAM;AACtB,gBAAI,OAAO,GAAP,KAAe,WAAf,IAA8B,QAAQ,IAA1C,EAAgD;AAC5C,sBAAM,IAAI,aAAJ,CAAkB,OAAO,+BAAzB,EAA0D,OAA1D,CAAN;AACH;AACJ;;AAED;;;;;;;kCAIiB,G,EAAK,I,EAAM;AACxB,gBAAI,OAAO,GAAP,KAAe,QAAnB,EAA6B;AACzB,sBAAM,IAAI,aAAJ,CAAkB,OAAO,mBAAzB,CAAN;AACH;AACJ;;AAED;;;;;;;oCAImB,G,EAAK,I,EAAM;AAC1B,gBAAI,OAAO,GAAP,KAAe,UAAnB,EAA+B;AAC3B,sBAAM,IAAI,aAAJ,CAAkB,OAAO,qBAAzB,CAAN;AACH;AACJ;;AAED;;;;;;;kCAIiB,G,EAAK,I,EAAM;AACxB,gBAAI,OAAO,GAAP,KAAe,QAAnB,EAA6B;AACzB,sBAAM,IAAI,aAAJ,CAAkB,OAAO,iBAAzB,CAAN;AACH;AACJ;;AAED;;;;;;;iCAIgB,G,EAAK,I,EAAM;AACvB,iBAAK,OAAL,CAAa,GAAb,EAAkB,IAAlB;AACA,iBAAK,SAAL,CAAe,GAAf,EAAoB,IAApB;AACA,gBAAI,IAAI,MAAJ,KAAe,CAAnB,EAAsB;AAClB,sBAAM,IAAI,aAAJ,CAAkB,OAAO,mBAAzB,EAA8C,QAA9C,CAAN;AACH;AACJ;;AAED;;;;;;;oCAImB,G,EAAK,I,EAAM;AAC1B,iBAAK,SAAL,CAAe,GAAf,EAAoB,IAApB;AACA,gBAAI,MAAM,CAAV,EAAa;AACT,sBAAM,IAAI,aAAJ,CAAkB,OAAO,sBAAzB,EAAiD,MAAjD,CAAN;AACH;AACJ;;AAED;;;;;;;oCAImB,G,EAAK,I,EAAM;AAC1B,iBAAK,SAAL,CAAe,GAAf,EAAoB,IAApB;AACA,gBAAI,OAAO,CAAX,EAAc;AACV,sBAAM,IAAI,aAAJ,CAAkB,OAAO,8BAAzB,EAAyD,MAAzD,CAAN;AACH;AACJ;;;;;;IAGQ,Y,WAAA,Y;;;iCAEO,C,EAAG;AACf,gBAAI,MAAM,KAAK,KAAL,CAAW,IAAI,CAAf,CAAV;AACA,gBAAI,MAAM,CAAV,EAAa;AACT,sBAAM,IAAI,KAAJ,CAAU,+DAAV,CAAN;AACH;AACD,gBAAI,MAAM,YAAV,EAAwB;AACpB,sBAAM,IAAI,KAAJ,CAAU,oFAAV,CAAN;AACH;AACD,gBAAI,MAAM,EAAV;AACA,gBAAI,SAAS,CAAb;AACA,gBAAM,IAAI,IAAI,UAAJ,CAAe,CAAf,CAAV;AACA,mBAAO,UAAU,CAAjB,EAAoB;AAChB,uBAAO,OAAO,YAAP,CAAoB,IAAK,MAAM,EAA/B,CAAP;AACA,sBAAM,KAAK,KAAL,CAAW,MAAM,EAAjB,CAAN;AACA,0BAAU,CAAV;AACH;AACD,mBAAO,GAAP;AACH;;;mCAEiB,C,EAAG;AACjB,gBAAI,MAAM,CAAV;AACA,gBAAI,CAAC,WAAW,IAAX,CAAgB,CAAhB,CAAL,EAAyB;AACrB,sBAAM,IAAI,KAAJ,CAAU,yBAAV,CAAN;AACH;AACD,gBAAM,IAAI,IAAI,UAAJ,CAAe,CAAf,CAAV;AACA,iBAAK,IAAI,IAAI,CAAb,EAAgB,KAAK,CAArB,EAAwB,GAAxB,EAA6B;AACzB,sBAAO,MAAM,EAAP,IAAc,EAAE,CAAF,EAAK,UAAL,CAAgB,CAAhB,IAAqB,CAAnC,CAAN;AACH;AACD,mBAAO,GAAP;AACH;;;AAED,0BAAY,KAAZ,EAAmB;AAAA;;AACf,aAAK,KAAL,GAAa,KAAb;AACH;;;;mCAEU;AACP,mBAAO,aAAa,QAAb,CAAsB,KAAK,KAA3B,CAAP;AACH;;;;;;IAIQ,S,WAAA,S;;;;;;;;AACT;;;;;;8BAMa,K,EAAO;;AAEhB,gBAAI,OAAO,KAAP,KAAiB,WAAjB,IAAgC,UAAU,IAA9C,EAAoD;AAChD;AACH;AACD;AACA,gBAAI,YAAJ;AACA,gBAAI,kBAAJ;AACA,gBAAI,CAAC,QAAL,EAAe;AACX,sBAAM,OAAN;AACA,oBAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;AAC3B,2BAAO,IAAI,KAAJ,CAAP;AACH,iBAFD,MAEO,IAAI,iBAAiB,IAArB,EAA2B;AAC9B,2BAAO,IAAI,MAAM,WAAN,EAAJ,CAAP;AACH,iBAFM,MAEA;AACH,2BAAO,IAAI,KAAK,SAAL,CAAe,KAAf,CAAJ,CAAP;AACH;AACJ;AACD;AACA,wBAAY,QAAZ;AACA,gBAAM,SAAS,QAAQ,SAAR,CAAf;AACA,kBAAM,OAAO,UAAP,CAAkB,KAAlB,CAAN;AACA,gBAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;AAC3B,oBAAI,MAAJ,CAAW,KAAX;AACH,aAFD,MAEO,IAAI,iBAAiB,IAArB,EAA2B;AAC9B,oBAAI,MAAJ,CAAW,MAAM,WAAN,EAAX;AACH,aAFM,MAEA;AACH,oBAAI,MAAJ,CAAW,KAAK,SAAL,CAAe,KAAf,CAAX;AACH;AACD,mBAAO,IAAI,MAAJ,CAAW,KAAX,CAAP;AACH;;AAED;;;;;;;;;+BAMc,K,EAAO;;AAEjB,iBAAK,KAAL,CAAW,QAAX,EAAqB,qDAArB;;AAEA,gBAAM,SAAS,QAAQ,QAAR,CAAf;AACA,gBAAI,OAAO,KAAP,KAAiB,WAAjB,IAAgC,UAAU,IAA9C,EAAoD;AAChD;AACH;AACD,gBAAM,OAAO,OAAO,UAAP,CAAkB,MAAlB,CAAb;AACA,gBAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;AAC3B,qBAAK,MAAL,CAAY,KAAZ;AACH,aAFD,MAEO,IAAI,iBAAiB,IAArB,EAA2B;AAC9B,qBAAK,MAAL,CAAY,MAAM,WAAN,EAAZ;AACH,aAFM,MAEA;AACH,qBAAK,MAAL,CAAY,KAAK,SAAL,CAAe,KAAf,CAAZ;AACH;AACD,mBAAO,KAAK,MAAL,CAAY,KAAZ,CAAP;AACH;;AAED;;;;;;;;;iCAMgB,K,EAAO;;AAEnB,iBAAK,KAAL,CAAW,QAAX,EAAqB,qDAArB;;AAEA,gBAAM,SAAS,QAAQ,QAAR,CAAf;AACA,gBAAI,OAAO,KAAP,KAAiB,WAAjB,IAAgC,UAAU,IAA9C,EAAoD;AAChD;AACH;AACD,gBAAM,SAAS,OAAO,UAAP,CAAkB,QAAlB,CAAf;AACA,gBAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;AAC3B,uBAAO,MAAP,CAAc,KAAd;AACH,aAFD,MAEO,IAAI,iBAAiB,IAArB,EAA2B;AAC9B,uBAAO,MAAP,CAAc,MAAM,WAAN,EAAd;AACH,aAFM,MAEA;AACH,uBAAO,MAAP,CAAc,KAAK,SAAL,CAAe,KAAf,CAAd;AACH;AACD,mBAAO,OAAO,MAAP,CAAc,KAAd,CAAP;AACH;;AAED;;;;;;;;kCAKiB;AACb,gBAAM,QAAQ,UAAd;AACA,gBAAM,OAAO,EAAb;AACA;AACA,gBAAI,UAAJ;AACA;AACA,iBAAK,CAAL,IAAU,KAAK,EAAL,IAAW,KAAK,EAAL,IAAW,KAAK,EAAL,IAAW,GAA3C;AACA,iBAAK,EAAL,IAAW,GAAX;;AAEA;AACA;AACA,iBAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,EAApB,EAAwB,GAAxB,EAA6B;AACzB,oBAAI,CAAC,KAAK,CAAL,CAAL,EAAc;AACV,wBAAI,IAAI,KAAK,MAAL,KAAgB,EAAxB;AACA,yBAAK,CAAL,IAAU,MAAO,MAAM,EAAP,GAAc,IAAI,GAAL,GAAY,GAAzB,GAA+B,CAArC,CAAV;AACH;AACJ;AACD,mBAAO,KAAK,IAAL,CAAU,EAAV,CAAP;AACH;;;;;;AAGL;;;;;IAGa,I,WAAA,I;;;;AACT;;;;+BAIc,C,EAAG;AACb,gBAAI,OAAO,CAAP,KAAa,QAAjB,EAA2B;AACvB,uBAAO,KAAP;AACH;AACD,mBAAO,UAAU,IAAV,CAAe,CAAf,CAAP;AACH;;AAED;;;;;;kCAGiB;AACb,mBAAO,IAAI,IAAJ,EAAP;AACH;;AAED;;;;;;;AAIA,kBAAY,KAAZ,EAAmB;AAAA;;AACf,YAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;AAC3B,gBAAM,OAAO,MAAM,OAAN,CAAc,IAAd,EAAoB,EAApB,EAAwB,OAAxB,CAAgC,IAAhC,EAAsC,EAAtC,CAAb;AACA,iBAAK,KAAL,CAAW,UAAU,IAAV,CAAe,IAAf,CAAX,EAAiC,4BAAjC;AACA,iBAAK,KAAL,GAAa,IAAb;AACA;AACH;AACD,aAAK,KAAL,GAAa,UAAU,OAAV,EAAb;AACH;;AAEL;AACI;;;;;;;mCAGW;AACP,mBAAO,KAAK,KAAZ;AACH;;AAEL;AACI;;;;;;kCAGU;AACN,mBAAO,KAAK,KAAZ;AACH;;AAEL;;;;iCACa;AACL,mBAAO,KAAK,KAAZ;AACH;;;;;;AAIL;;;;;IAGa,W,WAAA,W;;;;;;;;AACT;;;;oCAImB,M,EAAQ;AACvB,qBAAS,UAAU,CAAnB;AACA,gBAAM,QAAQ,uDAAd;AACA,gBAAI,MAAM,EAAV;AACA,iBAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,MAApB,EAA4B,GAA5B,EAAiC;AAC7B,uBAAO,MAAM,MAAN,CAAa,KAAK,SAAL,CAAe,CAAf,EAAkB,MAAM,MAAN,GAAe,CAAjC,CAAb,EAAkD,CAAlD,CAAP;AACH;AACD,mBAAO,GAAP;AACH;;AAED;;;;;;;;kCAKiB,G,EAAK,G,EAAK;AACvB,mBAAO,KAAK,KAAL,CAAW,KAAK,MAAL,MAAiB,MAAM,GAAN,GAAY,CAA7B,CAAX,IAA8C,GAArD;AACH;;AAED;;;;;;;;;kCAMiB,M,EAAQ;AACrB,qBAAS,CAAC,UAAU,CAAX,IAAgB,CAAzB;AACA,gBAAI,MAAM,EAAV;AACA,iBAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,MAApB,EAA4B,GAA5B,EAAiC;AAC7B,uBAAO,UAAU,MAAV,CAAiB,KAAK,SAAL,CAAe,CAAf,EAAkB,UAAU,MAAV,GAAmB,CAArC,CAAjB,EAA0D,CAA1D,CAAP;AACH;AACD,mBAAO,GAAP;AACH;;;;;;AAIL;;;;;IAGa,S,WAAA,S;;;;;;;;;AAET;;;;;0CAKyB,E,EAAI;AACzB,gBAAI,CAAC,EAAE,UAAF,CAAa,EAAb,CAAL,EAAuB;AACnB,uBAAO,EAAP;AACH;AACD,gBAAM,QAAQ,GAAG,QAAH,GAAc,OAAd,CAAsB,cAAtB,EAAsC,EAAtC,CAAd;AACA,gBAAI,SAAS,MAAM,KAAN,CAAY,MAAM,OAAN,CAAc,GAAd,IAAqB,CAAjC,EAAoC,MAAM,OAAN,CAAc,GAAd,CAApC,EAAwD,KAAxD,CAA8D,YAA9D,CAAb;AACA,gBAAI,WAAW,IAAf,EAAqB;AACjB,yBAAS,EAAT;AACH;AACD,mBAAO,MAAP;AACH;;AAED;;;;;;;;;;;kCAQiB,I,EAAM,O,EAAS;AAC5B,gBAAM,SAAS,EAAf;AACA,gBAAI,OAAO,IAAP,KAAgB,WAAhB,IAA+B,SAAS,IAA5C,EAAkD;AAC9C,uBAAO,MAAP;AACH;AACD,gBAAM,OAAO,OAAO,IAAP,CAAY,IAAZ,CAAb;AACA,cAAE,OAAF,CAAU,IAAV,EAAgB,UAAC,GAAD,EAAS;AACrB,oBAAI,KAAK,cAAL,CAAoB,GAApB,CAAJ,EAA8B;AAC1B,8BAAU,MAAV,CAAiB,MAAjB,EAAyB,GAAzB,EAA8B,KAAK,GAAL,CAA9B,EAAyC,OAAzC;AACH;AACJ,aAJD;AAKA,mBAAO,MAAP;AACH;;AAEL;AACI;;;;;;;;mCAKkB,K,EAAO;AACrB,mBAAO,UAAU,OAAV,CAAkB,KAAlB,CAAP;AACH;;AAEL;AACI;;;;;;;;;;;;;;;;;;oBAKgB,K,EAAO;AACnB,mBAAO,SAAS,KAAT,EAAgB,EAAhB,KAAuB,CAA9B;AACH,S;;AAEL;AACI;;;;;;;;;;;;;;;;;;oBAKkB,K,EAAO;AACrB,mBAAO,WAAW,KAAX,KAAqB,CAA5B;AACH,S;;AAEL;AACI;;;;;;;;qCAKoB,K,EAAO;AACvB,gBAAI,OAAO,KAAP,KAAiB,WAAjB,IAAgC,UAAU,IAA9C,EAAoD;AAChD,uBAAO,KAAP;AACH,aAFD,MAEO,IAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;AAClC,uBAAO,UAAU,CAAjB;AACH,aAFM,MAEA,IAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;AAClC,oBAAI,MAAM,KAAN,CAAY,YAAZ,KAA6B,MAAM,KAAN,CAAY,UAAZ,CAAjC,EAA0D;AACtD,2BAAO,SAAS,KAAT,EAAgB,EAAhB,MAAwB,CAA/B;AACH,iBAFD,MAEO,IAAI,MAAM,KAAN,CAAY,gBAAZ,CAAJ,EAAmC;AACtC,2BAAO,IAAP;AACH,iBAFM,MAEA,IAAI,MAAM,KAAN,CAAY,iBAAZ,CAAJ,EAAoC;AACvC,2BAAO,KAAP;AACH,iBAFM,MAEA,IAAI,0BAA0B,IAA1B,CAA+B,KAA/B,CAAJ,EAA2C;AAC9C,2BAAO,IAAP;AACH,iBAFM,MAEA,IAAI,4BAA4B,IAA5B,CAAiC,KAAjC,CAAJ,EAA6C;AAChD,2BAAO,KAAP;AACH,iBAFM,MAEA;AACH,2BAAO,KAAP;AACH;AACJ,aAdM,MAcA,IAAI,OAAO,KAAP,KAAiB,SAArB,EAAgC;AACnC,uBAAO,KAAP;AACH,aAFM,MAEA;AACH,uBAAO,CAAC,SAAS,KAAT,EAAgB,EAAhB,KAAuB,CAAxB,MAA+B,CAAtC;AACH;AACJ;;AAED;;;;;;gCAGe,K,EAAO;AAClB,gBAAI,eAAJ;AACA,gBAAK,OAAO,KAAP,KAAiB,QAAtB,EAAiC;AAC7B,oBAAI,MAAM,MAAN,KAAiB,CAArB,EAAwB;AACpB,6BAAS,KAAT;AACH;AACD,oBAAI,MAAM,KAAN,CAAY,gBAAZ,CAAJ,EAAmC;AAC/B,6BAAS,IAAT;AACH,iBAFD,MAEO,IAAI,MAAM,KAAN,CAAY,iBAAZ,CAAJ,EAAoC;AACvC,6BAAS,KAAT;AACH,iBAFM,MAEA,IAAI,MAAM,KAAN,CAAY,SAAZ,KAA0B,MAAM,KAAN,CAAY,cAAZ,CAA9B,EAA2D;AAC9D,6BAAS,IAAT;AACH,iBAFM,MAEA,IAAI,MAAM,KAAN,CAAY,YAAZ,CAAJ,EAA+B;AAClC,6BAAS,SAAS,KAAT,EAAgB,EAAhB,CAAT;AACH,iBAFM,MAEA,IAAI,MAAM,KAAN,CAAY,UAAZ,CAAJ,EAA6B;AAChC,6BAAS,WAAW,KAAX,CAAT;AACH,iBAFM,MAEA,IAAI,MAAM,KAAN,CAAY,aAAZ,CAAJ,EAAgC;AACnC,6BAAS,IAAI,IAAJ,CAAS,KAAK,KAAL,CAAW,KAAX,CAAT,CAAT;AACH,iBAFM,MAEA;AACH,6BAAS,KAAT;AACH;AACJ,aAnBD,MAmBO;AACH,yBAAS,KAAT;AACH;AACD,mBAAO,MAAP;AACH;;AAED;;;;;;;;;;;+BAQc,M,EAAQ,I,EAAM,K,EAAO,O,EAAS;;AAExC,sBAAU,WAAW,EAAC,eAAe,KAAhB,EAArB;AACA;AACA,gBAAI,QAAQ,WAAW,IAAX,CAAgB,IAAhB,CAAZ;AACA,gBAAI,aAAJ;AACA,gBAAI,mBAAJ;AACA,gBAAI,cAAJ;AACA,gBAAI,KAAJ,EAAW;AACP;AACA,uBAAO,MAAM,CAAN,CAAP;AACA;AACA,oBAAI,SAAS,IAAT,CAAc,IAAd,CAAJ,EAAyB;AACrB;AACA,wBAAI,CAAC,EAAE,OAAF,CAAU,OAAO,KAAjB,CAAL,EAA8B;AAC1B,+BAAO,KAAP,GAAe,EAAf;AACH;AACD;AACA,4BAAQ,KAAK,MAAL,CAAY,MAAM,KAAN,GAAc,MAAM,CAAN,EAAS,MAAnC,CAAR;AACA,8BAAU,MAAV,CAAiB,MAAjB,EAAyB,KAAzB,EAAgC,KAAhC,EAAuC,OAAvC;AACH,iBARD,MAQO;AACH;AACA,2BAAO,IAAP,IAAe,OAAO,IAAP,KAAgB,IAAI,SAAJ,EAA/B;AACA,iCAAa,IAAI,yBAAJ,CAA8B,MAA9B,EAAsC,IAAtC,CAAb;AACA;AACA,4BAAQ,KAAK,MAAL,CAAY,MAAM,KAAN,GAAc,MAAM,CAAN,EAAS,MAAnC,CAAR;AACA,8BAAU,MAAV,CAAiB,UAAjB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,OAA3C;AACH;AACJ,aApBD,MAoBO,IAAI,KAAK,OAAL,CAAa,GAAb,MAAsB,CAA1B,EAA6B;AAChC;AACA,oBAAM,KAAK,WAAX;AACA,wBAAQ,GAAG,IAAH,CAAQ,IAAR,CAAR;AACA,oBAAI,KAAJ,EAAW;AACP,2BAAO,MAAM,CAAN,CAAP;AACA;AACA,4BAAQ,KAAK,MAAL,CAAY,MAAM,KAAN,GAAc,MAAM,CAAN,EAAS,MAAnC,CAAR;AACA,wBAAI,SAAS,IAAT,CAAc,IAAd,CAAJ,EAAyB;AACrB;AACA,4BAAI,CAAC,EAAE,OAAF,CAAU,OAAO,KAAjB,CAAL,EAA8B;AAC1B,mCAAO,KAAP,GAAe,EAAf;AACH;AACJ;AACD,wBAAI,MAAM,MAAN,KAAiB,CAArB,EAAwB;AACpB,4BAAI,OAAO,KAAP,YAAwB,SAA5B,EAAuC;AACnC,mCAAO,KAAP,GAAe,EAAf;AACH;AACD,4BAAI,mBAAJ;AACA;AACA,4BAAK,OAAO,KAAP,KAAiB,QAAlB,IAA+B,QAAQ,aAA3C,EAA0D;AACtD,yCAAa,UAAU,OAAV,CAAkB,KAAlB,CAAb;AACH,yBAFD,MAEO;AACH,yCAAa,KAAb;AACH;AACD,4BAAI,EAAE,OAAF,CAAU,OAAO,KAAjB,CAAJ,EAA6B;AACzB,mCAAO,KAAP,CAAa,IAAb,CAAkB,UAAlB;AACH,yBAFD,MAEO;AACH,mCAAO,KAAP,CAAa,IAAb,IAAqB,UAArB;AACH;AACJ,qBAhBD,MAgBO;AACH,4BAAI,OAAO,KAAP,YAAwB,SAA5B,EAAuC;AACnC,mCAAO,KAAP,GAAe,EAAf;AACH;AACD,+BAAO,KAAP,CAAa,IAAb,IAAqB,OAAO,KAAP,CAAa,IAAb,KAAsB,IAAI,SAAJ,EAA3C;AACA,qCAAa,IAAI,yBAAJ,CAA8B,OAAO,KAArC,EAA4C,IAA5C,CAAb;AACA,kCAAU,MAAV,CAAiB,UAAjB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,OAA3C;AACH;AACJ,iBAlCD,MAkCO;AACH,0BAAM,IAAI,KAAJ,CAAU,mDAAV,CAAN;AACH;AACJ,aAzCM,MAyCA,IAAI,QAAQ,IAAR,CAAa,IAAb,CAAJ,EAAwB;AAC3B,oBAAI,QAAQ,aAAZ,EAA2B;AACvB,2BAAO,IAAP,IAAe,UAAU,OAAV,CAAkB,KAAlB,CAAf;AACH,iBAFD,MAEO;AACH,2BAAO,IAAP,IAAe,KAAf;AACH;AAEJ,aAPM,MAOA;AACH,sBAAM,IAAI,KAAJ,CAAU,qEAAV,CAAN;AACH;AACD,mBAAO,MAAP;AACH;;;;;;AAIL;;;;;;IAIM,yB,GACF,mCAAY,GAAZ,EAAiB,IAAjB,EAAuB;AAAA;;AACnB,WAAO,cAAP,CAAsB,IAAtB,EAA4B,OAA5B,EAAqC;AACjC,sBAAc,KADmB,EACZ,YAAY,IADA,EACM,GADN,iBACY;AACzC,mBAAO,IAAI,IAAJ,CAAP;AACH,SAHgC;AAG9B,WAH8B,eAG1B,KAH0B,EAGnB;AACV,gBAAI,IAAJ,IAAY,KAAZ;AACH;AALgC,KAArC;AAOA,WAAO,cAAP,CAAsB,IAAtB,EAA4B,MAA5B,EAAoC;AAChC,sBAAc,KADkB,EACX,YAAY,IADD,EACO,GADP,iBACa;AACzC,mBAAO,IAAP;AACH;AAH+B,KAApC;AAKH,C;;AAGL;;;;;IAGa,S,WAAA,S;;;;;;;;AACT;;;;;+BAKqB;AAAA,8CAAN,IAAM;AAAN,oBAAM;AAAA;;AACjB,gBAAI,cAAJ;AACA,gBAAI,UAAJ;AACA,gBAAI,UAAJ;AACA,gBAAM,aAAa,MAAnB;AACA,gBAAI,QAAJ,EAAc;AACV,oBAAM,OAAO,QAAQ,UAAR,CAAb;AACA,uBAAO,KAAK,IAAL,CAAU,KAAV,CAAgB,IAAhB,EAAsB,IAAtB,CAAP;AACH;AACD;AACA,oBAAQ,EAAR;AACA,iBAAK,IAAI,CAAJ,EAAO,IAAI,UAAU,MAA1B,EAAkC,IAAI,CAAtC,EAAyC,GAAzC,EAA8C;AAC1C,wBAAQ,MAAM,MAAN,CAAa,UAAU,CAAV,EAAa,OAAb,CAAqB,KAArB,EAA4B,GAA5B,EAAiC,KAAjC,CAAuC,GAAvC,CAAb,CAAR;AACH;AACD;AACA,gBAAM,WAAW,EAAjB;AACA,iBAAK,IAAI,CAAJ,EAAO,IAAI,MAAM,MAAtB,EAA8B,IAAI,CAAlC,EAAqC,GAArC,EAA0C;AACtC,oBAAM,QAAQ,MAAM,CAAN,CAAd;AACA;AACA;AACA,oBAAI,CAAC,KAAD,IAAU,UAAU,GAAxB,EAA6B;AACzB;AACH;AACD;AACA,oBAAI,UAAU,IAAd,EAAoB;AAChB,6BAAS,GAAT;AACH,iBAFD,MAEO;AACH,6BAAS,IAAT,CAAc,KAAd;AACH;AACJ;AACD;AACA,gBAAI,MAAM,CAAN,MAAa,EAAjB,EAAqB;AACjB,yBAAS,OAAT,CAAiB,EAAjB;AACH;AACD;AACA,mBAAO,SAAS,IAAT,CAAc,GAAd,MAAuB,SAAS,MAAT,GAAkB,GAAlB,GAAwB,GAA/C,CAAP;AACH;;;;;;AAGL,IAAM,QAAQ,SAAd;AACA,IAAM,UAAU,UAAhB;AACA,IAAM,QAAQ,UAAd;AACA,IAAM,UAAU,UAAhB;AACA,IAAM,WAAW,UAAjB;AACA,IAAM,SAAS,UAAf;AACA,IAAM,YAAY,UAAlB;AACA,IAAM,SAAS,UAAf;AACA,IAAM,UAAU,UAAhB;;AAEA,IAAM,OAAO,SAAb;;AAEA,IAAM,YAAY;AACd,WAAO,CADO;AAEd,UAAM,CAFQ;AAGd,UAAM,CAHQ;AAId,aAAS,CAJK;AAKd,WAAO;AALO,CAAlB;;AAQA,IAAM,iBAAiB;AACnB,WAAO,KADY;AAEnB,UAAM,SAFa;AAGnB,UAAM,OAHa;AAInB,aAAS,MAJU;AAKnB,WAAO,OAAO;AALK,CAAvB;;AAQA;;;;IAGa,W;AAET,yBAAY,OAAZ,EAAqB;AAAA;;AACjB,aAAK,OAAL,GAAe;AACX,oBAAQ,IADG;AAEX,mBAAO;AAFI,SAAf;AAIA,YAAI,OAAO,OAAP,KAAmB,WAAnB,IAAkC,YAAY,IAA9C,IAAsD,QAA1D,EAAoE;AAChE,gBAAI,QAAQ,GAAR,CAAY,QAAZ,KAAyB,aAA7B,EAA4C;AACxC,qBAAK,OAAL,CAAa,KAAb,GAAqB,OAArB;AACH;AACJ;AACD,YAAI,OAAO,OAAP,KAAmB,WAAnB,IAAkC,YAAY,IAAlD,EAAwD;AACpD,iBAAK,OAAL,GAAe,OAAf;AACA;AACA,iBAAK,KAAL,CAAW,UAAU,cAAV,CAAyB,KAAK,OAAL,CAAa,KAAtC,CAAX,EAAyD,sEAAzD;AACH;AACJ;;;;8BAEK,M,EAAO;AACT,iBAAK,KAAL,CAAW,UAAU,cAAV,CAAyB,MAAzB,CAAX,EAA4C,sEAA5C;AACA,iBAAK,OAAL,CAAa,KAAb,GAAqB,MAArB;AACA,mBAAO,IAAP;AACH;;;8BAEY;AAAA,+CAAN,IAAM;AAAN,oBAAM;AAAA;;AACT,gBAAM,OAAO,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,CAAb;AACA,iBAAK,KAAL,CAAW,MAAX,EAAmB,QAAQ,KAAR,CAAc,IAAd,EAAoB,IAApB,CAAnB;AACH;;;+BAEa;AAAA,+CAAN,IAAM;AAAN,oBAAM;AAAA;;AACV,gBAAM,OAAO,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,CAAb;AACA,iBAAK,KAAL,CAAW,MAAX,EAAmB,QAAQ,KAAR,CAAc,IAAd,EAAoB,IAApB,CAAnB;AACH;;;gCAEc;AAAA,+CAAN,IAAM;AAAN,oBAAM;AAAA;;AACX,gBAAM,OAAO,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,CAAb;AACA,iBAAK,KAAL,CAAW,OAAX,EAAoB,QAAQ,KAAR,CAAc,IAAd,EAAoB,IAApB,CAApB;AACH;;;+BAEa;AAAA,+CAAN,IAAM;AAAN,oBAAM;AAAA;;AACV,gBAAM,OAAO,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,CAAb;AACA,iBAAK,KAAL,CAAW,MAAX,EAAmB,QAAQ,KAAR,CAAc,IAAd,EAAoB,IAApB,CAAnB;AACH;;;kCAEgB;AAAA,+CAAN,IAAM;AAAN,oBAAM;AAAA;;AACb,gBAAM,OAAO,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,CAAb;AACA,iBAAK,KAAL,CAAW,SAAX,EAAsB,QAAQ,KAAR,CAAc,IAAd,EAAoB,IAApB,CAAtB;AACH;;;gCAEc;AAAA,+CAAN,IAAM;AAAN,oBAAM;AAAA;;AACX,gBAAM,OAAO,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,CAAb;AACA,iBAAK,KAAL,CAAW,OAAX,EAAoB,QAAQ,KAAR,CAAc,IAAd,EAAoB,IAApB,CAApB;AACH;;;oCAEW;AACR,mBAAQ,IAAI,IAAJ,EAAD,CAAa,WAAb,EAAP;AACH;;;8BAEK,K,EAAO,I,EAAM;AACf,gBAAI,UAAU,KAAV,IAAmB,UAAU,KAAK,OAAL,CAAa,KAAvB,CAAvB,EAAsD;AAClD;AACH;AACD;AACA,gBAAI,KAAK,OAAL,CAAa,MAAjB,EAAyB;AACrB,wBAAQ,GAAR,CAAY,eAAe,KAAf,IAAwB,KAAK,SAAL,EAAxB,GAA2C,IAA3C,GAAkD,MAAM,WAAN,EAAlD,GAAwE,IAAxE,GAA+E,IAA3F,EAAiG,KAAjG;AACH,aAFD,MAEO;AACH,wBAAQ,GAAR,CAAY,KAAK,SAAL,KAAmB,IAAnB,GAA0B,MAAM,WAAN,EAA1B,GAAgD,IAAhD,GAAuD,IAAnE;AACH;AACD;AACH;;;;;;;;IAIQ,U,WAAA,U;;;;;;;kCAGQ,M,EAAQ;AACrB,uBAAW,MAAX,GAAoB,MAApB;AACH;;AAED;;;;;;;8BAIoB;AAAA,+CAAN,IAAM;AAAN,oBAAM;AAAA;;AAChB,uBAAW,MAAX,CAAkB,GAAlB,CAAsB,KAAtB,CAA4B,WAAW,MAAvC,EAA+C,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,CAA/C;AACH;;AAED;;;;;;;gCAIsB;AAAA,+CAAN,IAAM;AAAN,oBAAM;AAAA;;AAClB,uBAAW,MAAX,CAAkB,KAAlB,CAAwB,KAAxB,CAA8B,WAAW,MAAzC,EAAiD,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,CAAjD;AACH;;AAED;;;;;;;;+BAKqB;AAAA,gDAAN,IAAM;AAAN,oBAAM;AAAA;;AACjB,uBAAW,MAAX,CAAkB,IAAlB,CAAuB,KAAvB,CAA6B,WAAW,MAAxC,EAAgD,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,CAAhD;AACH;;AAED;;;;;;;;+BAKqB;AAAA,gDAAN,IAAM;AAAN,oBAAM;AAAA;;AACjB,uBAAW,MAAX,CAAkB,IAAlB,CAAuB,KAAvB,CAA6B,WAAW,MAAxC,EAAgD,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,CAAhD;AACH;;AAED;;;;;;;;gCAKsB;AAAA,gDAAN,IAAM;AAAN,oBAAM;AAAA;;AAClB,uBAAW,MAAX,CAAkB,KAAlB,CAAwB,KAAxB,CAA8B,WAAW,MAAzC,EAAiD,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,CAAjD;AACH;;;;;;AAGL,WAAW,SAAX,CAAqB,IAAI,WAAJ,EAArB","file":"utils.js","sourcesContent":["/**\n * @license\n * MOST Web Framework 2.0 Codename Blueshift\n * Copyright (c) 2017, THEMOST LP All rights reserved\n *\n * Use of this source code is governed by an BSD-3-Clause license that can be\n * found in the LICENSE file at https://themost.io/license\n */\nimport blueimp from \"blueimp-md5\";\nimport _ from \"lodash\";\nimport {sprintf} from \"sprintf\";\nimport {ArgumentError} from \"./errors\";\n\nconst UUID_CHARS = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\nconst HEX_CHARS = \"abcdef1234567890\";\nconst STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\n\nconst DateTimeRegex = /^(\\d{4})(?:-?W(\\d+)(?:-?(\\d+)D?)?|(?:-(\\d+))?-(\\d+))(?:[T ](\\d+):(\\d+)(?::(\\d+)(?:\\.(\\d+))?)?)?(?:Z(-?\\d*))?$/g;\nconst BooleanTrueRegex = /^true$/ig;\nconst BooleanFalseRegex = /^false$/ig;\nconst NullRegex = /^null$/ig;\nconst UndefinedRegex = /^undefined$/ig;\nconst IntegerRegex = /^[-+]?\\d+$/g;\nconst FloatRegex = /^[+-]?\\d+(\\.\\d+)?$/g;\nconst GuidRegex = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/;\n\nfunction isNode() {\n    return Object.prototype.toString.call(typeof process !== \"undefined\" ? process : 0) === \"[object process]\";\n}\n\n/**\n * @class\n */\nexport class Args {\n    /**\n     * Checks the expression and throws an exception if the condition is not met.\n     * @param {*} expr\n     * @param {string|Error} err\n     */\n    static check(expr, err) {\n        Args.notNull(expr, \"Expression\");\n        if (typeof expr === \"function\") {\n            expr.call();\n        }\n        let res;\n        if (typeof expr === \"function\") {\n            res = !(expr.call());\n        } else {\n            res = (!expr);\n        }\n        if (res) {\n            if (err instanceof Error) {\n                throw err;\n            }\n            throw new ArgumentError(err, \"ECHECK\");\n        }\n    }\n\n    /**\n     *\n     * @param {*} arg\n     * @param {string} name\n     */\n    static notNull(arg, name) {\n        if (typeof arg === \"undefined\" || arg === null) {\n            throw new ArgumentError(name + \" may not be null or undefined\", \"ENULL\");\n        }\n    }\n\n    /**\n     * @param {*} arg\n     * @param {string} name\n     */\n    static notString(arg, name) {\n        if (typeof arg !== \"string\") {\n            throw new ArgumentError(name + \" must be a string\");\n        }\n    }\n\n    /**\n     * @param {*} arg\n     * @param {string} name\n     */\n    static notFunction(arg, name) {\n        if (typeof arg !== \"function\") {\n            throw new ArgumentError(name + \" must be a function\");\n        }\n    }\n\n    /**\n     * @param {*} arg\n     * @param {string} name\n     */\n    static notNumber(arg, name) {\n        if (typeof arg !== \"number\") {\n            throw new ArgumentError(name + \" must be number\");\n        }\n    }\n\n    /**\n     * @param {string|*} arg\n     * @param {string} name\n     */\n    static notEmpty(arg, name) {\n        Args.notNull(arg, name);\n        Args.notString(arg, name);\n        if (arg.length === 0) {\n            throw new ArgumentError(name + \" may not be empty\", \"EEMPTY\");\n        }\n    }\n\n    /**\n     * @param {number|*} arg\n     * @param {string} name\n     */\n    static notNegative(arg, name) {\n        Args.notNumber(arg, name);\n        if (arg < 0) {\n            throw new ArgumentError(name + \" may not be negative\", \"ENEG\");\n        }\n    }\n\n    /**\n     * @param {number|*} arg\n     * @param {string} name\n     */\n    static notPositive(arg, name) {\n        Args.notNumber(arg, name);\n        if (arg <= 0) {\n            throw new ArgumentError(name + \" may not be negative or zero\", \"EPOS\");\n        }\n    }\n}\n\nexport class Base26Number {\n\n    static toBase26(x) {\n        let num = Math.floor(x | 0);\n        if (num < 0) {\n            throw new Error(\"A non-positive integer cannot be converted to base-26 format.\");\n        }\n        if (num > 208827064575) {\n            throw new Error(\"A positive integer bigger than 208827064575 cannot be converted to base-26 format.\");\n        }\n        let out = \"\";\n        let length = 1;\n        const a = \"a\".charCodeAt(0);\n        while (length <= 8) {\n            out += String.fromCharCode(a + (num % 26));\n            num = Math.floor(num / 26);\n            length += 1;\n        }\n        return out;\n    }\n\n    static fromBase26(s) {\n        let num = 0;\n        if (!/[a-z]{8}/.test(s)) {\n            throw new Error(\"Invalid base-26 format.\");\n        }\n        const a = \"a\".charCodeAt(0);\n        for (let i = 7; i >= 0; i--) {\n            num = (num * 26) + (s[i].charCodeAt(0) - a);\n        }\n        return num;\n    }\n\n    constructor(value) {\n        this.value = value;\n    }\n\n    toString() {\n        return Base26Number.toBase26(this.value);\n    }\n\n}\n\nexport class TextUtils {\n    /**\n     * Converts the given parameter to MD5 hex string\n     * @static\n     * @param {*} value\n     * @returns {string|undefined}\n     */\n    static toMD5(value) {\n\n        if (typeof value === \"undefined\" || value === null) {\n            return;\n        }\n        //browser implementation\n        let md5;\n        let md5module;\n        if (!isNode()) {\n            md5 = blueimp;\n            if (typeof value === \"string\") {\n                return md5(value);\n            } else if (value instanceof Date) {\n                return md5(value.toUTCString());\n            } else {\n                return md5(JSON.stringify(value));\n            }\n        }\n        //node.js implementation\n        md5module = \"crypto\";\n        const crypto = require(md5module);\n        md5 = crypto.createHash(\"md5\");\n        if (typeof value === \"string\") {\n            md5.update(value);\n        } else if (value instanceof Date) {\n            md5.update(value.toUTCString());\n        } else {\n            md5.update(JSON.stringify(value));\n        }\n        return md5.digest(\"hex\");\n    }\n\n    /**\n     * Converts the given parameter to SHA1 hex string\n     * @static\n     * @param {*} value\n     * @returns {string|undefined}\n     */\n    static toSHA1(value) {\n\n        Args.check(isNode(), \"This method is not implemented for this environment\");\n\n        const crypto = require(\"crypto\");\n        if (typeof value === \"undefined\" || value === null) {\n            return;\n        }\n        const sha1 = crypto.createHash(\"sha1\");\n        if (typeof value === \"string\") {\n            sha1.update(value);\n        } else if (value instanceof Date) {\n            sha1.update(value.toUTCString());\n        } else {\n            sha1.update(JSON.stringify(value));\n        }\n        return sha1.digest(\"hex\");\n    }\n\n    /**\n     * Converts the given parameter to SHA256 hex string\n     * @static\n     * @param {*} value\n     * @returns {string|undefined}\n     */\n    static toSHA256(value) {\n\n        Args.check(isNode(), \"This method is not implemented for this environment\");\n\n        const crypto = require(\"crypto\");\n        if (typeof value === \"undefined\" || value === null) {\n            return;\n        }\n        const sha256 = crypto.createHash(\"sha256\");\n        if (typeof value === \"string\") {\n            sha256.update(value);\n        } else if (value instanceof Date) {\n            sha256.update(value.toUTCString());\n        } else {\n            sha256.update(JSON.stringify(value));\n        }\n        return sha256.digest(\"hex\");\n    }\n\n    /**\n     * Returns a random GUID/UUID string\n     * @static\n     * @returns {string}\n     */\n    static newUUID() {\n        const chars = UUID_CHARS;\n        const uuid = [];\n        // rfc4122, version 4 form\n        let r;\n        // rfc4122 requires these characters\n        uuid[8] = uuid[13] = uuid[18] = uuid[23] = \"-\";\n        uuid[14] = \"4\";\n\n        // Fill in random data.  At i==19 set the high bits of clock sequence as\n        // per rfc4122, sec. 4.1.5\n        for (let i = 0; i < 36; i++) {\n            if (!uuid[i]) {\n                r = 0 | Math.random() * 16;\n                uuid[i] = chars[(i === 19) ? (r & 0x3) | 0x8 : r];\n            }\n        }\n        return uuid.join(\"\");\n    }\n}\n\n/**\n *\n */\nexport class Guid {\n    /**\n     * @param {string} s\n     * @returns {boolean}\n     */\n    static isGuid(s) {\n        if (typeof s !== \"string\") {\n            return false;\n        }\n        return GuidRegex.test(s);\n    }\n\n    /**\n     * @returns {Guid}\n     */\n    static newGuid() {\n        return new Guid();\n    }\n\n    /**\n     * @constructor\n     * @param {string=} value\n     */\n    constructor(value) {\n        if (typeof value === \"string\") {\n            const test = value.replace(/^{/, \"\").replace(/{$/, \"\");\n            Args.check(GuidRegex.test(test), \"Value must be a valid UUID\");\n            this.value = test;\n            return;\n        }\n        this.value = TextUtils.newUUID();\n    }\n\n//noinspection JSUnusedGlobalSymbols\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return this.value;\n    }\n\n//noinspection JSUnusedGlobalSymbols\n    /**\n     * @returns {string}\n     */\n    valueOf() {\n        return this.value;\n    }\n\n//noinspection JSUnusedGlobalSymbols\n    toJSON() {\n        return this.value;\n    }\n\n}\n\n/**\n * @class\n */\nexport class RandomUtils {\n    /**\n     * Returns a random string based on the length specified\n     * @param {Number} length\n     */\n    static randomChars(length) {\n        length = length || 8;\n        const chars = \"abcdefghkmnopqursuvwxz2456789ABCDEFHJKLMNPQURSTUVWXYZ\";\n        let str = \"\";\n        for (let i = 0; i < length; i++) {\n            str += chars.substr(this.randomInt(0, chars.length - 1), 1);\n        }\n        return str;\n    }\n\n    /**\n     * Returns a random integer between a minimum and a maximum value\n     * @param {number} min\n     * @param {number} max\n     */\n    static randomInt(min, max) {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    /**\n     * Returns a random string based on the length specified\n     * @static\n     * @param {number} length\n     * @returns {string}\n     */\n    static randomHex(length) {\n        length = (length || 8) * 2;\n        let str = \"\";\n        for (let i = 0; i < length; i++) {\n            str += HEX_CHARS.substr(this.randomInt(0, HEX_CHARS.length - 1), 1);\n        }\n        return str;\n    }\n}\n\n\n/**\n * @class\n */\nexport class LangUtils {\n\n    /**\n     * Returns an array of strings which represents the arguments' names of the given function\n     * @param {Function} fn\n     * @returns {Array}\n     */\n    static getFunctionParams(fn) {\n        if (!_.isFunction(fn)) {\n            return [];\n        }\n        const fnStr = fn.toString().replace(STRIP_COMMENTS, \"\");\n        let result = fnStr.slice(fnStr.indexOf(\"(\") + 1, fnStr.indexOf(\")\")).match(/([^\\s,]+)/g);\n        if (result === null) {\n            result = [];\n        }\n        return result;\n    }\n\n    /**\n     * Parses HTTP form formatted values (e.g. \"user[name]\", user[password], user[options][rememberMe] etc ) and returns the equivalent native object\n     * @param {*} form\n     * @param {IConvertOptions} options\n     * @returns {*}\n     * @example\n     *\n     */\n    static parseForm(form, options) {\n        const result = {};\n        if (typeof form === \"undefined\" || form === null) {\n            return result;\n        }\n        const keys = Object.keys(form);\n        _.forEach(keys, (key) => {\n            if (form.hasOwnProperty(key)) {\n                LangUtils.extend(result, key, form[key], options);\n            }\n        });\n        return result;\n    }\n\n//noinspection JSUnusedGlobalSymbols\n    /**\n     * Parses value value or string and returns the resulted object.\n     * @param {*} value\n     * @returns {*}\n     */\n    static parseValue(value) {\n        return LangUtils.convert(value);\n    }\n\n//noinspection JSUnusedGlobalSymbols\n    /**\n     * Parses value value and returns the equivalent integer.\n     * @param {*} value\n     * @returns {*}\n     */\n    static parseInt(value) {\n        return parseInt(value, 10) || 0;\n    }\n\n//noinspection JSUnusedGlobalSymbols\n    /**\n     * Parses value value and returns the equivalent float number.\n     * @param {*} value\n     * @returns {*}\n     */\n    static parseFloat(value) {\n        return parseFloat(value) || 0;\n    }\n\n//noinspection JSUnusedGlobalSymbols\n    /**\n     * Parses value value and returns the equivalent boolean.\n     * @param {*} value\n     * @returns {*}\n     */\n    static parseBoolean(value) {\n        if (typeof value === \"undefined\" || value === null) {\n            return false;\n        } else if (typeof value === \"number\") {\n            return value !== 0;\n        } else if (typeof value === \"string\") {\n            if (value.match(IntegerRegex) || value.match(FloatRegex)) {\n                return parseInt(value, 10) !== 0;\n            } else if (value.match(BooleanTrueRegex)) {\n                return true;\n            } else if (value.match(BooleanFalseRegex)) {\n                return false;\n            } else if (/^yes$|^on$|^y$|^valid$/i.test(value)) {\n                return true;\n            } else if (/^no$|^off$|^n$|^invalid$/i.test(value)) {\n                return false;\n            } else {\n                return false;\n            }\n        } else if (typeof value === \"boolean\") {\n            return value;\n        } else {\n            return (parseInt(value, 10) || 0) !== 0;\n        }\n    }\n\n    /**\n     * @param {string} value\n     */\n    static convert(value) {\n        let result;\n        if ((typeof value === \"string\")) {\n            if (value.length === 0) {\n                result = value;\n            }\n            if (value.match(BooleanTrueRegex)) {\n                result = true;\n            } else if (value.match(BooleanFalseRegex)) {\n                result = false;\n            } else if (value.match(NullRegex) || value.match(UndefinedRegex)) {\n                result = null;\n            } else if (value.match(IntegerRegex)) {\n                result = parseInt(value, 10);\n            } else if (value.match(FloatRegex)) {\n                result = parseFloat(value);\n            } else if (value.match(DateTimeRegex)) {\n                result = new Date(Date.parse(value));\n            } else {\n                result = value;\n            }\n        } else {\n            result = value;\n        }\n        return result;\n    }\n\n    /**\n     *\n     * @param {*} origin\n     * @param {string} expr\n     * @param {string} value\n     * @param {IConvertOptions=} options\n     * @returns {*}\n     */\n    static extend(origin, expr, value, options) {\n\n        options = options || {convertValues: false};\n        //find base notation\n        let match = /(^\\w+)\\[/.exec(expr);\n        let name;\n        let descriptor;\n        let expr1;\n        if (match) {\n            //get property name\n            name = match[1];\n            //validate array property\n            if (/^\\d+$/g.test(name)) {\n                //property is an array\n                if (!_.isArray(origin.value)) {\n                    origin.value = [];\n                }\n                // get new expression\n                expr1 = expr.substr(match.index + match[1].length);\n                LangUtils.extend(origin, expr1, value, options);\n            } else {\n                //set property value (unknown)\n                origin[name] = origin[name] || new LangUtils();\n                descriptor = new UnknownPropertyDescriptor(origin, name);\n                // get new expression\n                expr1 = expr.substr(match.index + match[1].length);\n                LangUtils.extend(descriptor, expr1, value, options);\n            }\n        } else if (expr.indexOf(\"[\") === 0) {\n            //get property\n            const re = /\\[(.*?)]/g;\n            match = re.exec(expr);\n            if (match) {\n                name = match[1];\n                // get new expression\n                expr1 = expr.substr(match.index + match[0].length);\n                if (/^\\d+$/g.test(name)) {\n                    // property is an array\n                    if (!_.isArray(origin.value)) {\n                        origin.value = [];\n                    }\n                }\n                if (expr1.length === 0) {\n                    if (origin.value instanceof LangUtils) {\n                        origin.value = {};\n                    }\n                    let typedValue;\n                    // convert string value\n                    if ((typeof value === \"string\") && options.convertValues) {\n                        typedValue = LangUtils.convert(value);\n                    } else {\n                        typedValue = value;\n                    }\n                    if (_.isArray(origin.value)) {\n                        origin.value.push(typedValue);\n                    } else {\n                        origin.value[name] = typedValue;\n                    }\n                } else {\n                    if (origin.value instanceof LangUtils) {\n                        origin.value = {};\n                    }\n                    origin.value[name] = origin.value[name] || new LangUtils();\n                    descriptor = new UnknownPropertyDescriptor(origin.value, name);\n                    LangUtils.extend(descriptor, expr1, value, options);\n                }\n            } else {\n                throw new Error(\"Invalid object property notation. Expected [name]\");\n            }\n        } else if (/^\\w+$/.test(expr)) {\n            if (options.convertValues) {\n                origin[expr] = LangUtils.convert(value);\n            } else {\n                origin[expr] = value;\n            }\n\n        } else {\n            throw new Error(\"Invalid object property notation. Expected property[name] or [name]\");\n        }\n        return origin;\n    }\n\n}\n\n/**\n * @class\n * @constructor\n */\nclass UnknownPropertyDescriptor {\n    constructor(obj, name) {\n        Object.defineProperty(this, \"value\", {\n            configurable: false, enumerable: true, get() {\n                return obj[name];\n            }, set(value) {\n                obj[name] = value;\n            }\n        });\n        Object.defineProperty(this, \"name\", {\n            configurable: false, enumerable: true, get() {\n                return name;\n            }\n        });\n    }\n}\n\n/**\n * @class\n */\nexport class PathUtils {\n    /**\n     *\n     * @param {...string} part\n     * @returns {string}\n     */\n    static join(...part) {\n        let parts;\n        let i;\n        let l;\n        const pathModule = \"path\";\n        if (isNode()) {\n            const path = require(pathModule);\n            return path.join.apply(null, part);\n        }\n        // Split the inputs into a list of path commands.\n        parts = [];\n        for (i = 0, l = arguments.length; i < l; i++) {\n            parts = parts.concat(arguments[i].replace(/\\\\/g, \"/\").split(\"/\"));\n        }\n        // Interpret the path commands to get the new resolved path.\n        const newParts = [];\n        for (i = 0, l = parts.length; i < l; i++) {\n            const part1 = parts[i];\n            // Remove leading and trailing slashes\n            // Also remove \".\" segments\n            if (!part1 || part1 === \".\") {\n                continue;\n            }\n            // Interpret \"..\" to pop the last segment\n            if (part1 === \"..\") {\n                newParts.pop();\n            } else {\n                newParts.push(part1);\n            }\n        }\n        // Preserve the initial slash if there was one.\n        if (parts[0] === \"\") {\n            newParts.unshift(\"\");\n        }\n        // Turn back into a single string path.\n        return newParts.join(\"/\") || (newParts.length ? \"/\" : \".\");\n    }\n}\n\nconst Reset = \"\\x1b[0m\";\nconst FgBlack = \"\\x1b[30m\";\nconst FgRed = \"\\x1b[31m\";\nconst FgGreen = \"\\x1b[32m\";\nconst FgYellow = \"\\x1b[33m\";\nconst FgBlue = \"\\x1b[34m\";\nconst FgMagenta = \"\\x1b[35m\";\nconst FgCyan = \"\\x1b[36m\";\nconst FgWhite = \"\\x1b[37m\";\n\nconst Bold = \"\\x1b[1m\";\n\nconst LogLevels = {\n    error: 0,\n    warn: 1,\n    info: 2,\n    verbose: 3,\n    debug: 4,\n};\n\nconst LogLevelColors = {\n    error: FgRed,\n    warn: FgMagenta,\n    info: FgBlack,\n    verbose: FgBlue,\n    debug: Bold + FgGreen,\n};\n\n/**\n * extends ITraceLogger\n */\nexport class TraceLogger {\n\n    constructor(options) {\n        this.options = {\n            colors: true,\n            level: \"info\",\n        };\n        if (typeof options === \"undefined\" && options !== null && isNode()) {\n            if (process.env.NODE_ENV === \"development\") {\n                this.options.level = \"debug\";\n            }\n        }\n        if (typeof options !== \"undefined\" && options !== null) {\n            this.options = options;\n            //validate logging level\n            Args.check(LogLevels.hasOwnProperty(this.options.level), \"Invalid logging level. Expected error, warn, info, verbose or debug.\");\n        }\n    }\n\n    level(level) {\n        Args.check(LogLevels.hasOwnProperty(level), \"Invalid logging level. Expected error, warn, info, verbose or debug.\");\n        this.options.level = level;\n        return this;\n    }\n\n    log(...data) {\n        const args = Array.prototype.slice.call(arguments);\n        this.write(\"info\", sprintf.apply(null, args));\n    }\n\n    info(...data) {\n        const args = Array.prototype.slice.call(arguments);\n        this.write(\"info\", sprintf.apply(null, args));\n    }\n\n    error(...data) {\n        const args = Array.prototype.slice.call(arguments);\n        this.write(\"error\", sprintf.apply(null, args));\n    }\n\n    warn(...data) {\n        const args = Array.prototype.slice.call(arguments);\n        this.write(\"warn\", sprintf.apply(null, args));\n    }\n\n    verbose(...data) {\n        const args = Array.prototype.slice.call(arguments);\n        this.write(\"verbose\", sprintf.apply(null, args));\n    }\n\n    debug(...data) {\n        const args = Array.prototype.slice.call(arguments);\n        this.write(\"debug\", sprintf.apply(null, args));\n    }\n\n    timestamp() {\n        return (new Date()).toUTCString();\n    }\n\n    write(level, text) {\n        if (LogLevels[level] > LogLevels[this.options.level]) {\n            return;\n        }\n        /* tslint:disable:no-console */\n        if (this.options.colors) {\n            console.log(LogLevelColors[level] + this.timestamp() + \" [\" + level.toUpperCase() + \"] \" + text, Reset);\n        } else {\n            console.log(this.timestamp() + \" [\" + level.toUpperCase() + \"] \" + text);\n        }\n        /* tslint:enable:no-console */\n    }\n\n}\n\nexport class TraceUtils {\n\n\n    static useLogger(logger) {\n        TraceUtils.logger = logger;\n    }\n\n    /**\n     * @static\n     * @param {...*} data\n     */\n    static log(...data) {\n        TraceUtils.logger.log.apply(TraceUtils.logger, Array.prototype.slice.call(arguments));\n    }\n\n    /**\n     * @static\n     * @param {...*} data\n     */\n    static error(...data) {\n        TraceUtils.logger.error.apply(TraceUtils.logger, Array.prototype.slice.call(arguments));\n    }\n\n    /**\n     *\n     * @static\n     * @param {...*} data\n     */\n    static info(...data) {\n        TraceUtils.logger.info.apply(TraceUtils.logger, Array.prototype.slice.call(arguments));\n    }\n\n    /**\n     *\n     * @static\n     * @param {*} data\n     */\n    static warn(...data) {\n        TraceUtils.logger.warn.apply(TraceUtils.logger, Array.prototype.slice.call(arguments));\n    }\n\n    /**\n     *\n     * @static\n     * @param {...*} data\n     */\n    static debug(...data) {\n        TraceUtils.logger.debug.apply(TraceUtils.logger, Array.prototype.slice.call(arguments));\n    }\n}\n\nTraceUtils.useLogger(new TraceLogger());\n"]}