{"version":3,"sources":["html.js"],"names":["_","HTML_END_CHAR","HTML_FULL_END_STRING","HTML_SPACE_CHAR","HTML_ATTR_STRING","HTML_START_TAG_STRING","HTML_END_TAG_STRING","HtmlWriter","bufferedAttributes","bufferedTags","buffer","indent","name","value","push","obj","isNil","isArray","i","length","prop","hasOwnProperty","tag","repeat","replace","s","forEach","attr","escape","splice","tagsLength","fn"],"mappings":"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","file":"html.js","sourcesContent":["/**\n * @license\n * MOST Web Framework 2.0 Codename Blueshift\n * Copyright (c) 2017, THEMOST LP All rights reserved\n *\n * Use of this source code is governed by an BSD-3-Clause license that can be\n * found in the LICENSE file at https://themost.io/license\n */\nimport 'source-map-support/register';\nimport _ from 'lodash';\n\n/**\n * @private\n */\nconst HTML_END_CHAR = '>';\nconst HTML_FULL_END_STRING = ' />';\nconst HTML_SPACE_CHAR = ' ';\nconst HTML_ATTR_STRING = '%0=\"%1\"';\nconst HTML_START_TAG_STRING = '<%0';\nconst HTML_END_TAG_STRING = '</%0>';\n\n/**\n * @classdesc HtmlWriter class represents a helper class for rendering HTML content.\n * @class\n */\nexport class HtmlWriter {\n    constructor() {\n        /**\n         * @private\n         * @type {Array}\n         */\n        this.bufferedAttributes=[];\n        /**\n         * @private\n         * @type {Array}\n         */\n        this.bufferedTags = [];\n        /**\n         * @private\n         * @type {String}\n         */\n        this.buffer = '';\n        /**\n         * @private\n         * @type {Integer}\n         */\n        this.indent = true;\n    }\n\n    /**\n     * Writes an attribute to an array of attributes that is going to be used in writeBeginTag function\n     * @param {String} name - The name of the HTML attribute\n     * @param {String} value - The value of the HTML attribute\n     * @returns {HtmlWriter}\n     */\n    writeAttribute(name, value) {\n        this.bufferedAttributes.push({name:name, value:value});\n        return this;\n    }\n\n    /**\n     * Writes an array of attributes to the output buffer. This attributes are going to be rendered after writeBeginTag or WriteFullBeginTag function call.\n     * @param {Array|Object} obj - An array of attributes or an object that represents an array of attributes\n     * @returns {HtmlWriter}\n     */\n    writeAttributes(obj) {\n        if (_.isNil(obj))\n            return this;\n        if (_.isArray(obj)) {\n            for (let i = 0; i < obj.length; i++) {\n                this.bufferedAttributes.push( { name:obj[i].name, value:obj[i].value } );\n            }\n        }\n        else {\n            for (const prop in obj)\n            {\n                if (obj.hasOwnProperty(prop)) {\n                    if (obj[prop]!==null) {\n                        this.bufferedAttributes.push( { name:prop, value:obj[prop] } );\n                    }\n                }\n            }\n        }\n        return this;\n    }\n\n    /**\n     * @param {String} tag\n     * @returns {HtmlWriter}\n     */\n    writeBeginTag(tag) {\n        //write <TAG\n        if (this.indent)\n        {\n            //this.buffer += '\\n';\n            this.buffer +=_.repeat('\\t',this.bufferedTags.length);\n        }\n        this.buffer += HTML_START_TAG_STRING.replace(/%0/, tag);\n        this.bufferedTags.push(tag);\n        if (this.bufferedAttributes.length>0)\n        {\n            let s = '';\n            _.forEach(this.bufferedAttributes, function(attr) {\n                //write attribute='value'\n                s += HTML_SPACE_CHAR;\n                s += HTML_ATTR_STRING.replace(/%0/,attr.name).replace(/%1/, _.escape(attr.value));\n            });\n            this.buffer += s;\n        }\n        this.bufferedAttributes.splice(0,this.bufferedAttributes.length);\n        this.buffer += HTML_END_CHAR;\n        return this;\n    }\n\n    /**\n     * Writes a full begin HTML tag (e.g <div/>).\n     * @param {String} tag\n     * @returns {HtmlWriter}\n     */\n    writeFullBeginTag(tag) {\n        //write <TAG\n        if (this.indent)\n        {\n            this.buffer += '\\n';\n            this.buffer +=_.repeat('\\t',this.bufferedTags.length);\n        }\n        this.buffer += HTML_START_TAG_STRING.replace(/%0/, tag);\n        if (this.bufferedAttributes.length>0)\n        {\n            let s = '';\n            _.forEach(this.bufferedAttributes, function(attr) {\n                //write attribute='value'\n                s += HTML_SPACE_CHAR;\n                s += HTML_ATTR_STRING.replace(/%0/,attr.name).replace(/%1/, _.escape(attr.value));\n            });\n            this.buffer += s;\n        }\n        this.bufferedAttributes.splice(0,this.bufferedAttributes.length);\n        this.buffer += HTML_FULL_END_STRING;\n        return this;\n    }\n\n    /**\n     * Writes an end HTML tag (e.g </div>) based on the current buffered tags.\n     * @returns {HtmlWriter}\n     */\n    writeEndTag() {\n        const tagsLength = this.bufferedTags ? this.bufferedTags.length : 0;\n        if (tagsLength===0)\n            return this;\n        if (this.indent)\n        {\n            this.buffer += '\\n';\n            this.buffer +=_.repeat('\\t',tagsLength-1);\n        }\n        this.buffer += HTML_END_TAG_STRING.replace(/%0/,this.bufferedTags[tagsLength-1]);\n        this.bufferedTags.splice(tagsLength-1,1);\n        return this;\n    }\n\n    /**\n     *\n     * @param {String} s\n     * @returns {HtmlWriter}\n     */\n    writeText(s) {\n        if (!s)\n            return this;\n        if (this.indent)\n        {\n            this.buffer += '\\n';\n            this.buffer +=_.repeat('\\t',this.bufferedTags.length);\n        }\n        this.buffer += _.escape(s);\n        return this;\n    }\n\n    /**\n     *\n     * @param {String} s\n     * @returns {HtmlWriter}\n     */\n    write(s) {\n        this.buffer += s;\n        return this;\n    }\n\n    /**\n     * @returns {String}\n     */\n    toString() {\n        return this.buffer;\n    }\n\n    /**\n     * @param {function} fn\n     */\n    writeTo(fn) {\n        if (typeof fn === 'function') {\n            //call function\n            fn(this.buffer);\n            //and clear buffer\n            this.buffer='';\n            //and clear buffered tags\n            this.bufferedTags.splice(0,this.bufferedTags.length);\n        }\n    }\n}\n"]}